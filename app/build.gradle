plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.mvvmhilt"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        //Enable signing config with signature file path
        /*debug {
            keyAlias 'dummyAlias'
            keyPassword 'dummyPassword'
            storeFile file('path\\to\\file.jks')
            storePassword 'dummyStorePassword'
        }
        release {
            keyAlias 'dummyAlias'
            keyPassword 'dummyPassword'
            storeFile file('path\\to\\file.jks')
            storePassword 'dummyStorePassword'
        }*/
    }

    buildTypes {
        debug {
            applicationIdSuffix ".dev"

            minifyEnabled false
            shrinkResources false
            debuggable true

            multiDexEnabled = true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        stage {
            applicationIdSuffix ".dev"

            minifyEnabled true
            shrinkResources true
            debuggable true

            multiDexEnabled = true
            //enable for signing here
            //signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-release.pro'
        }
        release {
            minifyEnabled true //enable proguard
            shrinkResources true //remove unused classes and resources
            debuggable false

            multiDexEnabled = true
            //enable for signing here
            //signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-release.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        demo {
            applicationIdSuffix = ".free"
            versionNameSuffix = "-free"
        }
        paid {
            applicationIdSuffix = ".paid"
            versionNameSuffix = "-paid"
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.fragment:fragment-ktx:1.5.7"
    //Hilt dependencies
    def hilt = "2.44"
    implementation "com.google.dagger:hilt-android:$hilt"
    kapt "com.google.dagger:hilt-android-compiler:$hilt"
    //Timber dependency
    implementation 'com.jakewharton.timber:timber:4.7.1'
    //Volley dependency
    implementation 'com.android.volley:volley:1.2.1'
    //Room dependencies
    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    //Live Data dependency
    def lifecycle_version = "2.6.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    def nav_version = "2.5.3"
    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

    def retrofit = "2.9.0"
    def moshiVersion = "1.11.0"
    def okhttp_logging_interceptor = "4.10.0"
    implementation  "com.squareup.retrofit2:retrofit:$retrofit"
    implementation  "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation  "com.squareup.retrofit2:retrofit-mock:$retrofit"
    implementation  "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation    "com.squareup.moshi:moshi:$moshiVersion"
    implementation  "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor"

    //testing
    //unit testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}